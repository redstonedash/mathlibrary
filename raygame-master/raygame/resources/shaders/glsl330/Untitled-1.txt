vector3 edge0 = point1 - point0;
vector3 edge1 = point2 - point0;
vector3 v0 = point0 - sourcePosition;

float a = dot( edge0, edge0 );
float b = dot( edge1, edge0 );
float c = dot( edge1, edge1 );
float d = dot( v0, edge0 );
float e = dot( v0, edge1 );

float det = a*c - b*b;
float s = b*e - c*d;
float t = b*d - a*e;

if ( s + t < det )
{
    if ( s < 0.f )
    {
        if ( t < 0.f )
        {
            if ( d < 0.f )
            {
                s = clamp( -d/a, 0.f, 1.f );
                t = 0.f;
            }
            else
            {
                s = 0.f;
                t = clamp( -e/c, 0.f, 1.f );
            }
        }
        else
        {
            s = 0.f;
            t = clamp( -e/c, 0.f, 1.f );
        }
    }
    else if ( t < 0.f )
    {
        s = clamp( -d/a, 0.f, 1.f );
        t = 0.f;
    }
    else
    {
        float invDet = 1.f / det;
        s *= invDet;
        t *= invDet;
    }
}
else
{
    if ( s < 0.f )
    {
        float tmp0 = b+d;
        float tmp1 = c+e;
        if ( tmp1 > tmp0 )
        {
            float numer = tmp1 - tmp0;
            float denom = a-2*b+c;
            s = clamp( numer/denom, 0.f, 1.f );
            t = 1-s;
        }
        else
        {
            t = clamp( -e/c, 0.f, 1.f );
            s = 0.f;
        }
    }
    else if ( t < 0.f )
    {
        if ( a+d > b+e )
        {
            float numer = c+e-b-d;
            float denom = a-2*b+c;
            s = clamp( numer/denom, 0.f, 1.f );
            t = 1-s;
        }
        else
        {
            s = clamp( -e/c, 0.f, 1.f );
            t = 0.f;
        }
    }
    else
    {
        float numer = c+e-b-d;
        float denom = a-2*b+c;
        s = clamp( numer/denom, 0.f, 1.f );
        t = 1.f - s;
    }
}

return triangle[0] + s * edge0 + t * edge1;